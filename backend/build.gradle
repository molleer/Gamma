buildscript {
    ext {
        springBootVersion = "2.4.+"
        springVersion = "5.3.+"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

plugins {
    id "java"
    id "eclipse"
    id "application"
    id "checkstyle"
    id "pmd"
    id "jacoco"
    id "nebula.lint" version "16.7.0"
}

apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
group = "it.chalmers"
version = "0.9.0-SNAPSHOT"
sourceCompatibility = 11
mainClassName = "it.chalmers.gamma.GammaApplication"

repositories {
    mavenCentral()
}
jar {
    manifest {
        attributes "Main-Class": "it.chalmers.GammaApplication"
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

dependencies {

    compileOnly(
            "com.github.spotbugs:spotbugs-annotations:3.1.8"
    )
    // Are not needed to compile and build, only to configure
    runtime(
            "org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:${springBootVersion}",
            "org.springframework.boot:spring-boot-devtools:${springBootVersion}",
            "org.postgresql:postgresql:42.2.12",
            "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}",
            "org.springframework.boot:spring-boot-starter-web:${springBootVersion}",
            "org.springframework.boot:spring-boot-starter-data-redis:${springBootVersion}",
            "org.springframework.session:spring-session-data-redis:2.2.2.RELEASE",
            "org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}",
            "org.flywaydb:flyway-core:6.3.3"

    )
    compile(
            "org.springframework:spring-tx:${springVersion}",
            "org.springframework.security:spring-security-core:${springVersion}",
            "org.springframework.security:spring-security-web:${springVersion}",
            "org.springframework:spring-beans:${springVersion}",
            "org.springframework.data:spring-data-jpa:${springBootVersion}",
            "org.springframework:spring-core:${springVersion}",
            "org.springframework:spring-web:${springVersion}",
            "org.springframework:spring-context:${springVersion}",
            "org.springframework:spring-webmvc:${springVersion}",
            "org.springframework.security:spring-security-config:${springVersion}",
            "org.springframework.security.oauth:spring-security-oauth2:${springBootVersion}",
            "org.springframework.boot:spring-boot-autoconfigure:${springBootVersion}",
            "org.springframework.session:spring-session-core:${springBootVersion}",
            "org.springframework.boot:spring-boot:${springBootVersion}",
            "org.hibernate:hibernate-core:5.4.14.Final",
            "javax.validation:validation-api:2.0.1.Final",
            "org.apache.tomcat.embed:tomcat-embed-core:9.0.34",
            "org.jboss.spec.javax.transaction:jboss-transaction-api_1.2_spec:1.1.1.Final",
            "org.apache.httpcomponents:httpcore:4.4.13",
            "javax.persistence:javax.persistence-api:2.2",
            "org.apache.httpcomponents:httpclient:4.5.6",
            "javax.transaction:javax.transaction-api:1.3",
            "com.fasterxml.jackson.core:jackson-annotations:2.10.3",
            "org.slf4j:slf4j-api:1.7.30",
            "com.fasterxml.jackson.core:jackson-databind:2.10.3",
            "com.googlecode.json-simple:json-simple:1.1.1",
            "io.jsonwebtoken:jjwt:0.9.1",
            "commons-io:commons-io:2.6",
            "org.apache.httpcomponents:httpmime:4.5.12",
            "io.springfox:springfox-swagger-ui:2.9.2",
            "io.springfox:springfox-swagger2:2.9.2"
    )

    testCompile(
            "org.springframework:spring-test:${springVersion}",
            "org.springframework.security:spring-security-test:${springVersion}",
            "org.springframework.boot:spring-boot-test-autoconfigure:${springBootVersion}",
            "org.springframework.boot:spring-boot-test:${springBootVersion}",
            "junit:junit:4.13.1",
            "org.mockito:mockito-all:1.10.19",
    )


    testRuntimeOnly(
            "com.h2database:h2:1.4.200",
            "org.springframework.restdocs:spring-restdocs-mockmvc",
    )
}

repositories {
    mavenCentral()
}

checkstyle {
    toolVersion = "8.11"
    ignoreFailures = false
    maxWarnings = 0
    configFile = project(":").file("config/checkstyle/checkstyle.xml")
    configProperties = ["suppressionFile": project(":").file("config/checkstyle/suppressions.xml")]
}

pmd {
    toolVersion = "6.21.0"
    consoleOutput = false
    ignoreFailures = false
    rulePriority = 5
    ruleSets = []
    ruleSetConfig = resources.text.fromFile("./config/pmd/ruleset.xml")
}

jacoco {
    toolVersion = "0.8.5"
}

jacocoTestReport {
    reports {
        html.enabled = true
    }
}
// Is not perfect, but gives you an idea of what needs to be changed
gradleLint {
    rules = ["dependency-parentheses", "archaic-wrapper"]
}
